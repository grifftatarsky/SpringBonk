# Base #############################################################################################
bff-scheme: ${SCHEME_BFF:http}
bff-container-name: ${CONTAINER_NAME_BFF:localhost}
bff-prefix: ${PREFIX_BFF:/bff}
# Reverse Proxy ####################################################################################
reverse-proxy-scheme: ${SCHEME_REVERSE_PROXY:http}
reverse-proxy-port: ${PORT_REVERSE_PROXY:7080}
reverse-proxy-container-name: ${CONTAINER_NAME_REVERSE_PROXY:localhost}
reverse-proxy-uri: ${reverse-proxy-scheme}://${reverse-proxy-container-name}:${reverse-proxy-port}
# Authorization Server #############################################################################
auth-server-prefix: ${AUTH_PREFIX:/auth}
auth-server-issuer: ${AUTH_ISSUER:/realms/local-keycloak}
issuer: ${reverse-proxy-uri}${auth-server-prefix}${auth-server-issuer}
# TODO: what should this actually be...
client-id: ${BFF_CLIENT_ID}
client-secret: ${BFF_CLIENT_SECRET}
# Resource Server ##################################################################################
resource-port: ${PORT_RESOURCE_SERVER:7084}
resource-scheme: ${SCHEME_RESOURCE_SERVER:http}
resource-container-name: ${CONTAINER_NAME_RESOURCE:localhost}
resource-prefix: ${PREFIX_RESOURCE:/api}
# Application Properties ###########################################################################
server:
  port: ${PORT_BFF:7081}
# Security #########################################################################################
spring:
  security:
    oauth2:
      client:
        provider:
          gpt-keycloak:
            issuer-uri: ${issuer}
        registration:
          gpt-keycloak:
            provider: gpt-keycloak
            authorization-grant-type: authorization_code
            client-id: ${client-id}
            client-secret: ${client-secret}
            scope: openid,profile,email,offline_access
# Gateway Routes ###################################################################################
  cloud:
    gateway:
      routes:
        - id: bff
          uri: ${resource-scheme}${resource-container-name}:${resource-port}
          predicates:
            - Path=${resource-prefix}/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - TokenRelay=
            - SaveSession
            - StripPrefix=1
# Addons ###########################################################################################
com:
  c4-soft:
    springaddons:
      oidc:
        ops:
          - iss: ${issuer}
            authorities:
              - path: ${AUTH_AUTHORITIES_JSON:$.realm_access.roles}
            aud: ${AUTH_AUDIENCE:}
        client:
          client-uri: ${reverse-proxy-uri}${bff-prefix}
          security-matchers:
            - /${resource-prefix}/**
            - /login/**
            - /oauth2/**
            - /logout
          permit-all:
            - /${resource-prefix}/**
            - /login/**
            - /oauth2/**
          csrf: cookie-accessible-from-js
          oauth2-redirections:
            rp-initiated-logout: ACCEPTED
        resourceserver:
          permit-all:
            - /login-options
            - /error
            - /actuator/health
            - /actuator/health/readiness
            - /actuator/health/liveness

# TODO: Why is this unused?
#username-claim-json-path: $.preferred_username