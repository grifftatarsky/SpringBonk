#!/bin/bash
set -e

# Create the resource server database and user
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
   CREATE DATABASE "${RESOURCE_DATASOURCE_NAME}";
   CREATE USER "${RESOURCE_DATASOURCE_USERNAME}" WITH PASSWORD '${RESOURCE_DATASOURCE_PASSWORD}';
   GRANT ALL PRIVILEGES ON DATABASE "${RESOURCE_DATASOURCE_NAME}" TO "${RESOURCE_DATASOURCE_USERNAME}";
EOSQL

# Grant privileges for the resource server user on the database schema
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -d "${RESOURCE_DATASOURCE_NAME}" <<-EOSQL
   CREATE SCHEMA IF NOT EXISTS public AUTHORIZATION "${RESOURCE_DATASOURCE_USERNAME}";
   GRANT ALL PRIVILEGES ON SCHEMA public TO "${RESOURCE_DATASOURCE_USERNAME}";
   ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO "${RESOURCE_DATASOURCE_USERNAME}";
EOSQL

# Create the auth server database and user
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
   CREATE DATABASE "${AUTH_DATASOURCE_NAME}";
   CREATE USER "${AUTH_DATASOURCE_USER}" WITH PASSWORD '${AUTH_DATASOURCE_PASSWORD}';
   GRANT ALL PRIVILEGES ON DATABASE "${AUTH_DATASOURCE_NAME}" TO "${AUTH_DATASOURCE_USER}";
EOSQL

# Grant privileges for the auth server user on the database schema
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -d "${AUTH_DATASOURCE_NAME}" <<-EOSQL
   CREATE SCHEMA IF NOT EXISTS public AUTHORIZATION "${AUTH_DATASOURCE_USER}";
   GRANT ALL PRIVILEGES ON SCHEMA public TO "${AUTH_DATASOURCE_USER}";
   ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO "${AUTH_DATASOURCE_USER}";
EOSQL